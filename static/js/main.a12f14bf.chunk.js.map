{"version":3,"sources":["logo.svg","utils/fetchJSON.js","constants.js","components/ListRenderer/ListRenderer.js","components/LinkTile/LinkTile.js","components/RaceTile/RaceTile.js","pages/HomePage/HomePage.js","pages/SeasonDetail/SeasonDetail.js","App.js","reportWebVitals.js","index.js"],"names":["getJSON","url","cb","a","fetch","then","response","json","data","getJSONData","BASE_URL","END_POINTS","SEASONS","SEASON_DETAILS_HEADERS","Circuit","Location","circuitId","circuitName","date","raceName","round","season","result","HEADERS","mapper","props","path","label","className","linkClass","classNames","to","title","tileClass","ListRenderer","componentName","list","Component","listClass","map","item","HomePage","useState","seasonsList","updateSeasonsList","useEffect","bind","seasonsData","MRData","SeasonTable","Seasons","seasonDetail","SeasonDetails","seasonData","setSeasonData","year","useParams","races","RaceTable","Races","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a12f14bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const getJSON = (url,cb) => {\n    const getJSONData = async () => {\n        const data = await fetch(url).then(response => response.json());\n        if(cb && typeof cb === 'function'){\n            cb(data);\n        }\n    }\n    getJSONData();\n}\n\nexport { getJSON };","const BASE_URL = 'https://ergast.com/api/f1';\n\n \nconst END_POINTS = {\n        BASE_URL,\n        SEASONS: `${BASE_URL}/seasons.json?limit=75`\n}\n\nconst SEASON_DETAILS_HEADERS = {\n    Circuit : { \n        Location: 'Location', \n        circuitId: 'Circuit ID', \n        circuitName: 'Circuit Name' \n        }, \n    date : 'Date', \n    raceName: 'Race Name', \n    round: 'Round', \n    season: 'Season',\n    result: 'View Result'\n}\n\nconst HEADERS = {\n    HOME_PAGE: 'Formula One Racing Seasons',\n}\n\nexport { END_POINTS, SEASON_DETAILS_HEADERS, HEADERS }\n","import React from 'react';\nimport LinkTile from '../LinkTile/LinkTile';\nimport RaceTile from '../RaceTile/RaceTile';\nimport classNames from 'classnames';\n\nconst mapper = {\n    'link-tile': LinkTile,\n    'race-tile': RaceTile \n}\n\nconst ListRenderer = (props) => {\n    const { componentName, list, className } = props;\n    const Component = mapper[componentName];\n    const listClass = classNames(className, 'list');\n    return (<section className={listClass}>\n        {list.map( item => <Component {...item} />)}\n    </section>)\n}\n\nexport default ListRenderer;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport  classNames  from 'classnames';\n\n\n\nconst LinkTile = (props) => {\n    const { path, label, className} = props;\n    const linkClass= classNames(className, 'tile');\n    return <Link to={path} className={linkClass} title={`Formulae 1 season ${label}`}>{label}</Link>\n}\n\nexport default LinkTile;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst RaceTile = (props) => {\n    const { Circuit : { Location: location, circuitId, circuitName }, \n            date, raceName, round, season, result, className } = props;\n    const tileClass = classNames(className,'race-tile');\n\n    return (<div className={tileClass}>\n                <span>{date}</span>\n                <span>{circuitName}</span>\n                <span>{raceName}</span>\n                <span>{round}</span>\n                { !result && <Link to={`${season}/${round}/results`} title={`season ${season} results`}>Result</Link>}\n                { result && <span>{result}</span>}\n            </div>);\n}\n\nexport default RaceTile;","import React, {useEffect, useState } from 'react';\n\nimport { getJSON } from '../../utils/fetchJSON';\nimport { END_POINTS, HEADERS } from '../../constants';\nimport ListRenderer from '../../components/ListRenderer/ListRenderer';\n\nimport './HomePage.css';\n\nconst HomePage = () => {\n    const [ seasonsList, updateSeasonsList ] = useState([]);\n\n    const updateList = (data) =>  {\n        const { MRData: { SeasonTable: { Seasons } } } = data;\n        const seasonsData = Seasons.map( seasonDetail => ({\n            path: `/season/${seasonDetail.season}`,\n            label: seasonDetail.season\n        }));\n        updateSeasonsList([...seasonsData]);\n    }\n\n    useEffect(getJSON.bind(null,END_POINTS.SEASONS,updateList),[]);\n\n    return (\n        <section className=\"homepage\">\n            <h1>{HEADERS.HOME_PAGE}</h1>\n            <ListRenderer componentName=\"link-tile\" list={seasonsList} />\n        </section>\n    )\n}\n\nexport default HomePage;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ListRenderer from '../../components/ListRenderer/ListRenderer';\nimport { END_POINTS, SEASON_DETAILS_HEADERS } from '../../constants';\nimport { getJSON } from '../../utils/fetchJSON';\n\nimport './SeasonDetail.css';\n\nconst SeasonDetails = () => {\n    const [ seasonData, setSeasonData ] = useState([]);\n    const fetchSeasonDetails = (data) => {\n        const { MRData: { RaceTable: { Races: races }}} = data;\n        setSeasonData([SEASON_DETAILS_HEADERS,...races]);\n    }\n    const { year } = useParams();\n    \n    useEffect(getJSON.bind(null, `${END_POINTS.BASE_URL}/${year}.json`, fetchSeasonDetails),[]);\n\n    return (<section className=\"season-details\">\n                <h1>Season Details for year {year}</h1>\n                <ListRenderer componentName=\"race-tile\" list={seasonData}/>\n            </section>)\n}\n\nexport default SeasonDetails;","import logo from './logo.svg';\nimport './App.css';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport SeasonDetails from './pages/SeasonDetail/SeasonDetail';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/season/:year\">\n            <SeasonDetails />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}